Autotested Results for a1 submitted by Siddharth Patel (patelsi6)
Generated at 2016-11-19T22:36:52

Summary of Results: 298 out of 321 tests successfully passed
--

Tests for tests.DirtTest (5/5 passed)
--

1) Dirt declaration                                                                   .. ok!
2) Dirt variable                                                                      .. ok!
3) equals is implemented                                                              .. ok!
4) getValue is implemented                                                            .. ok!
5) hashCode is implemented                                                            .. ok!


Tests for tests.DustTest (24/25 passed)
--

1) the method updateCoordinates()                                                     .. ok!
2) the method hashCode()                                                              .. ok!
3) getColumn() returning the correct value                                            .. ok!
4) getColumn() returning the correct value with multiple Sprites                      .. ok!
5) getSymbol() not changing the return value of getRow()                              .. ok!
6) getRow() not changing the return value of getColumn()                              .. ok!
7) the method updateCoordinates()                                                     .. ok!
8) getRow() not changing the return value of getSymbol()                              .. ok!
9) that Dust inherits Dirt                                                            .. ok!
10) the method getRow()                                                                .. ok!
11) getColumn() not changing the return value of getSymbol()                           .. ok!
12) the variable symbol exists and is declared correctly                               .. ok!
13) the method getColumn()                                                             .. ok!
14) the constructor exists and is declared correctly                                   .. ok!
15) the method equals()                                                                .. ok!
16) getSymbol() not changing the return value of getColumn()                           .. ok!
17) toString() returning the correct value                                             .. ok!
18) getSymbol() returning the correct value                                            .. ok!
19) getColumn() not changing the return value of getRow()                              .. ok!
20) getRow() returning the correct value with multiple Sprites                         .. ok!
21) the method getSymbol()                                                             .. ok!
22) getRow() returning the correct value                                               .. ok!
23) the variable column exists and is declared correctly                               .. ok!
24) the variable row exists and is declared correctly                                  .. ok!
25) getValue is correct                                                                .. failed
.. because Testing if getValue correctly returns the value. expected:<1> but was:<4> (details below):

    java.lang.AssertionError: Testing if getValue correctly returns the value. expected:<1> but was:<4>
    	at org.junit.Assert.fail(Assert.java:88)
    	at org.junit.Assert.failNotEquals(Assert.java:834)
    	at org.junit.Assert.assertEquals(Assert.java:645)
    	at tests.DustTest.testGetValue(DustTest.java:42)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)



Tests for tests.ListGridTest (30/34 passed)
--

1) ListGrid getNumColumns                                                             .. ok!
2) ListGrid constructor                                                               .. ok!
3) ListGrid setCell signature                                                         .. ok!
4) ListGrid getNumRows                                                                .. ok!
5) ListGrid getNumColumns                                                             .. ok!
6) ListGrid does not override equals                                                  .. ok!
7) ListGrid setCell V1                                                                .. ok!
8) ListGrid setCell walls                                                             .. ok!
9) ListGrid setCell vacant                                                            .. ok!
10) ListGrid does not override equals                                                  .. ok!
11) ListGrid equals with different sprites                                             .. ok!
12) ListGrid setCell dustball                                                          .. ok!
13) ListGrid setCell dirt                                                              .. ok!
14) ListGrid setCell V2                                                                .. ok!
15) ListGrid setCell V2                                                                .. ok!
16) ListGrid equals with different swapped sprites                                     .. ok!
17) ListGrid setCell visited                                                           .. ok!
18) ListGrid getNumRows                                                                .. ok!
19) ListGrid getNumRows signature                                                      .. ok!
20) ListGrid getNumRows                                                                .. ok!
21) ListGrid getNumColumns signature                                                   .. ok!
22) ListGrid getCell signature                                                         .. ok!
23) ListGrid declaration                                                               .. ok!
24) ListGrid equals self                                                               .. ok!
25) ListGrid equals with different dimensions                                          .. ok!
26) ListGrid setCell wall                                                              .. ok!
27) ListGrid equals with different dimensions                                          .. ok!
28) ListGrid setCell over non-vacant cell                                              .. ok!
29) ListGrid equals with different dimensions                                          .. ok!
30) ListGrid variable                                                                  .. ok!
31) ListGrid equals with similar dimensions                                            .. failed
.. because An ListGrid should be equal to an identical ListGrid (details below):

    java.lang.AssertionError: An ListGrid should be equal to an identical ListGrid
    	at org.junit.Assert.fail(Assert.java:88)
    	at org.junit.Assert.assertTrue(Assert.java:41)
    	at tests.ListGridTest.testEqualsSimilarSprites(ListGridTest.java:566)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

32) ListGrid toString with all walls                                                   .. failed
.. because The string representation of an ListGrid should produce a String representation of the ListGrid in exactly the same way as Figure 1 in the handout (details below):

    java.lang.AssertionError: The string representation of an ListGrid should produce a String representation of the ListGrid in exactly the same way as Figure 1 in the handout
    	at org.junit.Assert.fail(Assert.java:88)
    	at org.junit.Assert.assertTrue(Assert.java:41)
    	at tests.ListGridTest.testToStringAllWalls(ListGridTest.java:589)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

33) ListGrid equals same                                                               .. failed
.. because An ListGrid should be equal to an identical ListGrid (details below):

    java.lang.AssertionError: An ListGrid should be equal to an identical ListGrid
    	at org.junit.Assert.fail(Assert.java:88)
    	at org.junit.Assert.assertTrue(Assert.java:41)
    	at tests.ListGridTest.testEqualsIdentical(ListGridTest.java:421)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

34) ListGrid toString with all sprites                                                 .. failed
.. because The string representation of an ListGrid should produce a String representation of the ListGrid in exactly the same way as Figure 1 in the handout (details below):

    java.lang.AssertionError: The string representation of an ListGrid should produce a String representation of the ListGrid in exactly the same way as Figure 1 in the handout
    	at org.junit.Assert.fail(Assert.java:88)
    	at org.junit.Assert.assertTrue(Assert.java:41)
    	at tests.ListGridTest.testToStringAllSprites(ListGridTest.java:735)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)



Tests for tests.DustBallTest (26/28 passed)
--

1) getSymbol() not changing the return value of getColumn()                           .. ok!
2) getSymbol() not changing the return value of getRow()                              .. ok!
3) the variable row exists and is declared correctly                                  .. ok!
4) that DustBall inherits Sprite                                                      .. ok!
5) the method getColumn()                                                             .. ok!
6) the variable symbol exists and is declared correctly                               .. ok!
7) toString() returning the correct value                                             .. ok!
8) the variable column exists and is declared correctly                               .. ok!
9) the method equals()                                                                .. ok!
10) getRow() returning the correct value                                               .. ok!
11) getColumn() returning the correct value                                            .. ok!
12) the constructor exists and is declared correctly                                   .. ok!
13) the method getRow()                                                                .. ok!
14) getColumn() returning the correct value with multiple Sprites                      .. ok!
15) getColumn() not changing the return value of getRow()                              .. ok!
16) the method updateCoordinates()                                                     .. ok!
17) the method hashCode()                                                              .. ok!
18) getColumn() not changing the return value of getSymbol()                           .. ok!
19) getRow() not changing the return value of getSymbol()                              .. ok!
20) getValue is correct                                                                .. ok!
21) the method updateCoordinates()                                                     .. ok!
22) the method getSymbol()                                                             .. ok!
23) moveTo signature                                                                   .. ok!
24) getRow() not changing the return value of getColumn()                              .. ok!
25) getRow() returning the correct value with multiple Sprites                         .. ok!
26) getSymbol() returning the correct value                                            .. ok!
27) moveTo dustball moves correctly                                                    .. failed
.. because moveTo() should only move the dust ball that calls it
 (details below):

    java.lang.AssertionError: moveTo() should only move the dust ball that calls it
    
    	at org.junit.Assert.fail(Assert.java:88)
    	at org.junit.Assert.assertTrue(Assert.java:41)
    	at tests.DustBallTest.testMoveMultipleDustBalls(DustBallTest.java:63)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

28) moveTo dustball moves correctly                                                    .. failed
.. because move should set the row and col correctly
 (details below):

    java.lang.AssertionError: move should set the row and col correctly
    
    	at org.junit.Assert.fail(Assert.java:88)
    	at org.junit.Assert.assertTrue(Assert.java:41)
    	at tests.DustBallTest.testMove(DustBallTest.java:54)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)



Tests for tests.GridTest (7/7 passed)
--

1) Grid setCell signature                                                             .. ok!
2) Grid getNumColumns signature                                                       .. ok!
3) Grid equals signature                                                              .. ok!
4) Grid getCell signature                                                             .. ok!
5) Grid toString signature                                                            .. ok!
6) Grid declaration                                                                   .. ok!
7) Grid getNumRows signature                                                          .. ok!


Tests for tests.VacuumTest (32/32 passed)
--

1) getColumn() returning the correct value with multiple Sprites                      .. ok!
2) empty modifies vacuum fullness                                                     .. ok!
3) the constructor exists and is declared correctly                                   .. ok!
4) getSymbol() not changing the return value of getRow()                              .. ok!
5) getSymbol() returning the correct value                                            .. ok!
6) getColumn() returning the correct value                                            .. ok!
7) getScore returns correct value after emptying                                      .. ok!
8) getRow() not changing the return value of getColumn()                              .. ok!
9) the variable symbol exists and is declared correctly                               .. ok!
10) getColumn() not changing the return value of getSymbol()                           .. ok!
11) getRow() not changing the return value of getSymbol()                              .. ok!
12) setUnder() sets the under sprite                                                   .. ok!
13) the method getColumn()                                                             .. ok!
14) Vacuum correctly inherits from Sprite                                              .. ok!
15) getRow() returning the correct value                                               .. ok!
16) the method updateCoordinates()                                                     .. ok!
17) the variable row exists and is declared correctly                                  .. ok!
18) the method hashCode()                                                              .. ok!
19) getColumn() not changing the return value of getRow()                              .. ok!
20) the method updateCoordinates()                                                     .. ok!
21) getScore returns correct score                                                     .. ok!
22) the method getSymbol()                                                             .. ok!
23) getRow() returning the correct value with multiple Sprites                         .. ok!
24) the method getRow()                                                                .. ok!
25) getSymbol() not changing the return value of getColumn()                           .. ok!
26) the method equals()                                                                .. ok!
27) moveTo modifies location of correct vacuum                                         .. ok!
28) moveTo has correct signature                                                       .. ok!
29) toString() returning the correct value                                             .. ok!
30) the variable column exists and is declared correctly                               .. ok!
31) clean() modifies vacuum fullness                                                   .. ok!
32) moveTo modifies location correctly                                                 .. ok!


Tests for tests.DumpsterTest (24/24 passed)
--

1) the method getColumn()                                                             .. ok!
2) getSymbol() not changing the return value of getRow()                              .. ok!
3) the constructor exists and is declared correctly                                   .. ok!
4) the variable symbol exists and is declared correctly                               .. ok!
5) the method updateCoordinates()                                                     .. ok!
6) that Dumpster inherits Sprite                                                      .. ok!
7) the variable row exists and is declared correctly                                  .. ok!
8) getColumn() returning the correct value                                            .. ok!
9) the variable column exists and is declared correctly                               .. ok!
10) getColumn() not changing the return value of getSymbol()                           .. ok!
11) getRow() not changing the return value of getColumn()                              .. ok!
12) the method getRow()                                                                .. ok!
13) the method getSymbol()                                                             .. ok!
14) getSymbol() returning the correct value                                            .. ok!
15) the method equals()                                                                .. ok!
16) getRow() returning the correct value                                               .. ok!
17) getSymbol() not changing the return value of getColumn()                           .. ok!
18) getRow() returning the correct value with multiple Sprites                         .. ok!
19) the method updateCoordinates()                                                     .. ok!
20) the method hashCode()                                                              .. ok!
21) getRow() not changing the return value of getSymbol()                              .. ok!
22) getColumn() returning the correct value with multiple Sprites                      .. ok!
23) toString() returning the correct value                                             .. ok!
24) getColumn() not changing the return value of getRow()                              .. ok!


Tests for tests.SpriteTest (10/10 passed)
--

1) the method hashCode()                                                              .. ok!
2) the method getColumn()                                                             .. ok!
3) the method updateCoordinates()                                                     .. ok!
4) the method getRow()                                                                .. ok!
5) the variable symbol exists and is declared correctly                               .. ok!
6) the method getSymbol()                                                             .. ok!
7) the variable column exists and is declared correctly                               .. ok!
8) the constructor exists and is declared correctly                                   .. ok!
9) the variable row exists and is declared correctly                                  .. ok!
10) the method equals()                                                                .. ok!


Tests for tests.WallTest (24/24 passed)
--

1) the variable column exists and is declared correctly                               .. ok!
2) getRow() not changing the return value of getSymbol()                              .. ok!
3) getColumn() returning the correct value                                            .. ok!
4) getRow() returning the correct value                                               .. ok!
5) the variable row exists and is declared correctly                                  .. ok!
6) getRow() returning the correct value with multiple Sprites                         .. ok!
7) the method updateCoordinates()                                                     .. ok!
8) getSymbol() not changing the return value of getRow()                              .. ok!
9) the method equals()                                                                .. ok!
10) the method getRow()                                                                .. ok!
11) getColumn() not changing the return value of getRow()                              .. ok!
12) the method hashCode()                                                              .. ok!
13) getSymbol() returning the correct value                                            .. ok!
14) the method getColumn()                                                             .. ok!
15) the method updateCoordinates()                                                     .. ok!
16) the variable symbol exists and is declared correctly                               .. ok!
17) getColumn() returning the correct value with multiple Sprites                      .. ok!
18) the method getSymbol()                                                             .. ok!
19) getSymbol() not changing the return value of getColumn()                           .. ok!
20) the constructor exists and is declared correctly                                   .. ok!
21) getColumn() not changing the return value of getSymbol()                           .. ok!
22) that Wall inherits Sprite                                                          .. ok!
23) getRow() not changing the return value of getColumn()                              .. ok!
24) toString() returning the correct value                                             .. ok!


Tests for tests.VacuumGameTest (62/74 passed)
--

1) getSprite with dirt                                                                .. ok!
2) getWinner gives correct results                                                    .. ok!
3) move up twice on clean                                                             .. ok!
4) move left twice on clean                                                           .. ok!
5) getNumRows with 6 rows                                                             .. ok!
6) VacuumGame getSprite signature                                                     .. ok!
7) getNumCols with 36 cols                                                            .. ok!
8) move left twice onto vacuum                                                        .. ok!
9) getVacuumTwo non-null                                                              .. ok!
10) VacuumGame getGrid signature                                                       .. ok!
11) getWinner gives correct results                                                    .. ok!
12) getNumRows with 12 rows                                                            .. ok!
13) getNumCols with 24 cols                                                            .. ok!
14) VacuumGame getNumColumns signature                                                 .. ok!
15) clean gives correct results                                                        .. ok!
16) variable grid                                                                      .. ok!
17) non-null grid                                                                      .. ok!
18) move left on other vacuum                                                          .. ok!
19) getWinner gives correct results                                                    .. ok!
20) getNumCols with 7 cols                                                             .. ok!
21) clean gives correct results                                                        .. ok!
22) variable random                                                                    .. ok!
23) move down twice onto wall                                                          .. ok!
24) getWinner gives correct results                                                    .. ok!
25) getSprite with vacuum                                                              .. ok!
26) VacuumGame getWinner signature                                                     .. ok!
27) VacuumGame move signature                                                          .. ok!
28) clean gives correct results                                                        .. ok!
29) variables vaccuum1 and vacuum2                                                     .. ok!
30) move right on other vacuum                                                         .. ok!
31) variable dustBalls                                                                 .. ok!
32) move right twice onto vacuum                                                       .. ok!
33) VacuumGame getNumRows                                                              .. ok!
34) getSprite with vacuum                                                              .. ok!
35) getSprite with clean                                                               .. ok!
36) VacuumGame                                                                         .. ok!
37) getWinner gives correct results                                                    .. ok!
38) getWinner gives correct results                                                    .. ok!
39) getNumRows with 7 rows                                                             .. ok!
40) VacuumGame constructor                                                             .. ok!
41) move right                                                                         .. ok!
42) getWinner gives correct results                                                    .. ok!
43) gameOver gives correct results                                                     .. ok!
44) variable dusts                                                                     .. ok!
45) getSprite with clean                                                               .. ok!
46) move right twice on clean                                                          .. ok!
47) move right on wall                                                                 .. ok!
48) VacuumGame getVacuumTwo signature                                                  .. ok!
49) move down                                                                          .. ok!
50) getSprite with wall                                                                .. ok!
51) getWinner gives correct results                                                    .. ok!
52) VacuumGame gameOver signature                                                      .. ok!
53) getWinner gives correct results                                                    .. ok!
54) getVacuumOne non-null                                                              .. ok!
55) getWinner gives correct results                                                    .. ok!
56) move up on wall                                                                    .. ok!
57) getWinner gives correct results                                                    .. ok!
58) VacuumGame getVacuumOne signature                                                  .. ok!
59) getSprite with dustball                                                            .. ok!
60) move right twice onto wall                                                         .. ok!
61) move left                                                                          .. ok!
62) clean gives correct results                                                        .. ok!
63) move down twice onto vacuum                                                        .. failed
.. because  (details below):

    java.lang.NullPointerException
    	at game.MapGrid.setCell(MapGrid.java:41)
    	at game.VacuumGame.<init>(VacuumGame.java:83)
    	at tests.VacuumGameTest.testMoveVacuumTwoVacuumDown(VacuumGameTest.java:1003)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

64) move down on other vacuum                                                          .. failed
.. because  (details below):

    java.lang.NullPointerException
    	at game.MapGrid.setCell(MapGrid.java:41)
    	at game.VacuumGame.<init>(VacuumGame.java:83)
    	at tests.VacuumGameTest.testMoveVacuumOneVacuumDown(VacuumGameTest.java:725)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

65) move left on wall                                                                  .. failed
.. because  (details below):

    java.lang.NullPointerException
    	at game.MapGrid.setCell(MapGrid.java:41)
    	at game.VacuumGame.<init>(VacuumGame.java:83)
    	at tests.VacuumGameTest.testMoveVacuumOneWallLeft(VacuumGameTest.java:578)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

66) move up twice onto vacuum                                                          .. failed
.. because  (details below):

    java.lang.NullPointerException
    	at game.MapGrid.setCell(MapGrid.java:41)
    	at game.VacuumGame.<init>(VacuumGame.java:83)
    	at tests.VacuumGameTest.testMoveVacuumTwoVacuumUp(VacuumGameTest.java:981)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

67) move down twice on clean                                                           .. failed
.. because  (details below):

    java.lang.NullPointerException
    	at game.MapGrid.setCell(MapGrid.java:41)
    	at game.VacuumGame.<init>(VacuumGame.java:83)
    	at tests.VacuumGameTest.testMoveVacuumTwoUnvisitedDown(VacuumGameTest.java:830)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

68) move up twice onto wall                                                            .. failed
.. because  (details below):

    java.lang.NullPointerException
    	at game.MapGrid.setCell(MapGrid.java:41)
    	at game.VacuumGame.<init>(VacuumGame.java:83)
    	at tests.VacuumGameTest.testMoveVacuumTwoWallUp(VacuumGameTest.java:897)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

69) move up                                                                            .. failed
.. because  (details below):

    java.lang.NullPointerException
    	at game.MapGrid.setCell(MapGrid.java:41)
    	at game.VacuumGame.<init>(VacuumGame.java:83)
    	at tests.VacuumGameTest.testMoveVacuumOneUnvisitedUp(VacuumGameTest.java:524)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

70) move up on other vacuum                                                            .. failed
.. because  (details below):

    java.lang.NullPointerException
    	at game.MapGrid.setCell(MapGrid.java:41)
    	at game.VacuumGame.<init>(VacuumGame.java:83)
    	at tests.VacuumGameTest.testMoveVacuumOneVacuumUp(VacuumGameTest.java:703)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

71) move left twice onto wall                                                          .. failed
.. because  (details below):

    java.lang.NullPointerException
    	at game.MapGrid.setCell(MapGrid.java:41)
    	at game.VacuumGame.<init>(VacuumGame.java:83)
    	at tests.VacuumGameTest.testMoveVacuumTwoWallLeft(VacuumGameTest.java:857)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

72) getNumCols with 7 cols                                                             .. failed
.. because  (details below):

    java.lang.NullPointerException
    	at game.MapGrid.setCell(MapGrid.java:41)
    	at game.VacuumGame.<init>(VacuumGame.java:83)
    	at tests.VacuumGameTest.testGetNumColsTall(VacuumGameTest.java:360)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

73) getNumRows with 16 rows                                                            .. failed
.. because  (details below):

    java.lang.NullPointerException
    	at game.MapGrid.setCell(MapGrid.java:41)
    	at game.VacuumGame.<init>(VacuumGame.java:83)
    	at tests.VacuumGameTest.testGetNumRowsTall(VacuumGameTest.java:328)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

74) move down on wall                                                                  .. failed
.. because  (details below):

    java.lang.NullPointerException
    	at game.MapGrid.setCell(MapGrid.java:41)
    	at game.VacuumGame.<init>(VacuumGame.java:83)
    	at tests.VacuumGameTest.testMoveVacuumOneWallDown(VacuumGameTest.java:638)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)



Tests for tests.MapGridTest (30/34 passed)
--

1) MapGrid setCell wall                                                               .. ok!
2) MapGrid does not override equals                                                   .. ok!
3) MapGrid equals self                                                                .. ok!
4) MapGrid getNumRows                                                                 .. ok!
5) MapGrid getNumColumns                                                              .. ok!
6) MapGrid setCell vacant                                                             .. ok!
7) MapGrid equals with different sprites                                              .. ok!
8) MapGrid variable                                                                   .. ok!
9) MapGrid getNumRows                                                                 .. ok!
10) MapGrid setCell visited                                                            .. ok!
11) MapGrid setCell V2                                                                 .. ok!
12) MapGrid getNumColumns                                                              .. ok!
13) MapGrid setCell V2                                                                 .. ok!
14) MapGrid getNumRows                                                                 .. ok!
15) MapGrid constructor                                                                .. ok!
16) MapGrid getNumRows signature                                                       .. ok!
17) MapGrid setCell over non-vacant cell                                               .. ok!
18) MapGrid equals with different swapped sprites                                      .. ok!
19) MapGrid setCell V1                                                                 .. ok!
20) MapGrid getCell signature                                                          .. ok!
21) MapGrid setCell dustball                                                           .. ok!
22) MapGrid getNumColumns signature                                                    .. ok!
23) MapGrid does not override equals                                                   .. ok!
24) MapGrid extends Grid                                                               .. ok!
25) MapGrid setCell dirt                                                               .. ok!
26) MapGrid equals with different dimensions                                           .. ok!
27) MapGrid setCell walls                                                              .. ok!
28) MapGrid equals with different dimensions                                           .. ok!
29) MapGrid equals with different dimensions                                           .. ok!
30) MapGrid setCell signature                                                          .. ok!
31) MapGrid toString with all walls                                                    .. failed
.. because The string representation of an MapGrid should produce a String representation of the MapGrid in exactly the same way as Figure 1 in the handout (details below):

    java.lang.AssertionError: The string representation of an MapGrid should produce a String representation of the MapGrid in exactly the same way as Figure 1 in the handout
    	at org.junit.Assert.fail(Assert.java:88)
    	at org.junit.Assert.assertTrue(Assert.java:41)
    	at tests.MapGridTest.testToStringAllWalls(MapGridTest.java:592)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

32) MapGrid equals with similar dimensions                                             .. failed
.. because An MapGrid should be equal to an identical MapGrid (details below):

    java.lang.AssertionError: An MapGrid should be equal to an identical MapGrid
    	at org.junit.Assert.fail(Assert.java:88)
    	at org.junit.Assert.assertTrue(Assert.java:41)
    	at tests.MapGridTest.testEqualsSimilarSprites(MapGridTest.java:569)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

33) MapGrid equals same                                                                .. failed
.. because An MapGrid should be equal to an identical MapGrid (details below):

    java.lang.AssertionError: An MapGrid should be equal to an identical MapGrid
    	at org.junit.Assert.fail(Assert.java:88)
    	at org.junit.Assert.assertTrue(Assert.java:41)
    	at tests.MapGridTest.testEqualsIdentical(MapGridTest.java:424)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)

34) MapGrid toString with all sprites                                                  .. failed
.. because The string representation of an MapGrid should produce a String representation of the MapGrid in exactly the same way as Figure 1 in the handout (details below):

    java.lang.AssertionError: The string representation of an MapGrid should produce a String representation of the MapGrid in exactly the same way as Figure 1 in the handout
    	at org.junit.Assert.fail(Assert.java:88)
    	at org.junit.Assert.assertTrue(Assert.java:41)
    	at tests.MapGridTest.testToStringAllSprites(MapGridTest.java:738)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    	at java.lang.reflect.Method.invoke(Method.java:498)
    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
    	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    	at java.lang.Thread.run(Thread.java:745)



Tests for tests.CleanHallwayTest (24/24 passed)
--

1) getColumn() not changing the return value of getRow()                              .. ok!
2) getRow() returning the correct value                                               .. ok!
3) toString() returning the correct value                                             .. ok!
4) getColumn() not changing the return value of getSymbol()                           .. ok!
5) getSymbol() not changing the return value of getRow()                              .. ok!
6) getRow() not changing the return value of getSymbol()                              .. ok!
7) getSymbol() not changing the return value of getColumn()                           .. ok!
8) getColumn() returning the correct value with multiple Sprites                      .. ok!
9) the method getSymbol()                                                             .. ok!
10) the method hashCode()                                                              .. ok!
11) the method updateCoordinates()                                                     .. ok!
12) the constructor exists and is declared correctly                                   .. ok!
13) getColumn() returning the correct value                                            .. ok!
14) the method getColumn()                                                             .. ok!
15) the method equals()                                                                .. ok!
16) the variable symbol exists and is declared correctly                               .. ok!
17) getRow() not changing the return value of getColumn()                              .. ok!
18) getRow() returning the correct value with multiple Sprites                         .. ok!
19) getSymbol() returning the correct value                                            .. ok!
20) the method getRow()                                                                .. ok!
21) the variable column exists and is declared correctly                               .. ok!
22) the variable row exists and is declared correctly                                  .. ok!
23) that CleanHallway inherits Sprite                                                  .. ok!
24) the method updateCoordinates()                                                     .. ok!


